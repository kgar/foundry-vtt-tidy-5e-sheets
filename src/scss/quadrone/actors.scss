.tidy5e-sheet.application:where(.quadrone.actor) {
  --sidebar-expanded-width: 17.25rem; // I just picked a value for now while prototyping.
  // --header-image: url(../../modules/tidy5e-sheet/images/background-character.webp);
  --header-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.64);

  background: var(--t5e-theme-color-default);
  display: flex;
  flex-direction: column;
  flex: 1;
  container-name: actor-sheet;
  container-type: inline-size;

  &:not(.minimized) {
    min-width: 43.75rem;
  }

  // ::selection {
  //   background-color: var(--t5e-theme-color-default);
  // }

  &::before {
    background-image: var(--t5e-sheet-header-bg, url(../../modules/tidy5e-sheet/images/banner-character.webp));
    background-position: top center;
    background-size: auto;
    background-repeat: no-repeat;

    filter: grayscale(100%);
    mix-blend-mode: luminosity;
    opacity: 0.4;
    background-size: cover;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    z-index: -2;
    width: 100%;
    height: 18.75rem;
  }

  &::after {
    background: linear-gradient(to bottom, rgba(159, 146, 117, 0.5), rgb(91, 78, 49));
    mix-blend-mode: color-burn;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    width: 100%;
    height: 100%;
  }

  .window-content {
    display: flex;
    flex-direction: column;    padding: 0.5rem 0 0.25rem;
    margin-top: -0.75rem;

    .tabs-row {
      container-name: sheet-tabs;
      container-type: inline-size;
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;

      >.sidebar-toggle {
        position: absolute;
        left: 0;
        padding: 0;
        column-gap: var(--t5e-size-1);

        padding-inline-start: 0.5rem;
        margin-inline-start: -0.5rem;
        padding-inline-end: 0.6875rem;

        >i {
          color: var(--t5e-color-icon-diminished);
        }

        &:hover>i {
          color: var(--t5e-color-icon-default);
        }
      }

      >.tidy-tabs {}
    }

    .sheet-body {
      display: flex;
      flex: 1;
      flex-direction: row;
      overflow-x: hidden;
      overflow-y: hidden;
      position: relative;
      z-index: 0;

      background-color: var(--t5e-component-card-default);
      background-image: url(../../modules/tidy5e-sheet/images/parchment-texture-bottom.webp);
      background-position: bottom center;
      background-repeat: no-repeat;

      &::before {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        z-index: -1;
        background-image: url(../../modules/tidy5e-sheet/images/parchment-texture-top.webp);
        background-position: top center;
        background-repeat: no-repeat;
      }
    }

    .main-content {
      display: flex;
      flex: 1;
      flex-direction: row;
      overflow: hidden;


      &::after {
        content: '';
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        z-index: -1;
      }


      >.sidebar {
        flex-basis: var(--sidebar-expanded-width);
        margin-inline-end: var(--t5e-size-4x);
        margin-inline-start: calc((var(--sidebar-expanded-width) + var(--t5e-size-4x)) * -1);
        padding: var(--t5e-size-3x) var(--t5e-size-3x) 0 var(--t5e-size-4x);
        overflow-y: auto;
        transition: margin var(--t5e-transition-default);
        display: flex;
        flex-direction: column;

        .sidebar-header {
          flex: 0;
        }

        .sidebar-tab-contents {
          padding: var(--t5e-size-3x) 0;
          overflow-y: auto;
          flex: 1;
        }

        &.expanded {
          margin-inline-start: 0;
          margin-inline-end: 0;
          max-width: var(--sidebar-expanded-width);
        }
      }

      .sidebar-tab-contents {
        gap: var(--t5e-size-4x);
        padding-bottom: var(--t5e-size-6x);
      }

      .sidebar-tab-strip {
        .tab-option {
          flex: 1;
        }
      }

      >.tidy-tab {
        flex: 1;
        overflow-y: auto;
        padding: var(--t5e-size-3x) var(--t5e-size-4x) var(--t5e-size-3x) var(--t5e-size-4x);
        position: relative;
        // container-type: inline-size;
      }
    }
  }

  .tidy-tab {
    .tidy-table-row {
      min-height: 2.0625rem;
    }
  }

  .sheet-header {
    --header-padding: 1rem;

    // All of the sheet header stuff goes in here
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.65));
    border-bottom: 0.0625rem solid var(--t5e-color-gold);

    // container-type: inline-size;
    display: flex;
    flex-direction: column;
    align-content: flex-start;
    padding: 0 var(--t5e-size-2x);
    gap: var(--t5e-size-2x);

    .sheet-header-content {
      flex-direction: row-reverse;
      flex-wrap: nowrap;
      justify-content: flex-end;

      >.flexcol {
        min-width: 0;
      }
    }

    .actor-context-row {
      >.flexcol {
        min-width: 0;
      }
    }

    .button-config {
      color: var(--t5e-color-icon-button);

      &.button-icon-only.button-borderless:not(:disabled):hover {
        background-color: transparent;
      }
    }

    .actor-details {
      &-name-row {
        display: flex;
        flex-direction: row;

      }

      &-subtitle-row {
        display: flex;
        flex-direction: row;
        align-items: flex-end;
      }
    }

    .actor-vitals-container {
      display: block;
      margin-left: var(--t5e-size-2x);
      margin-bottom: auto;
      position: relative;
      padding-bottom: 2rem;
      max-width: 11.25rem;

      .actor-image {
        --inset: 0.3125rem;
        min-width: 10rem;
        max-height: 11.25rem;
        max-width: 11.25rem;
        background-position: center;
        width: 100%;
        box-shadow: var(--t5e-box-shadow-default);
        overflow: hidden;

        img {
          border: none;
          display: block;
          height: 11.25rem;
          width: 11.25rem;
          object-fit: cover;
          object-position: top center;
        }

        &::before {
          content: '';
          position: absolute;
          top: var(--inset);
          left: var(--inset);
          right: var(--inset);
          bottom: var(--inset);
          border-color: var(--t5e-color-gold);
          border-style: solid;
          pointer-events: none;
          transition: border-color var(--t5e-transition-default);
        }

        &:hover::before {
          border-color: var(--t5e-color-palette-gold-75);
        }


        &.round {
          border-radius: 100%;
          box-shadow: var(--header-shadow);
          overflow: hidden;
          position: relative;

          &::before {
            border-radius: 100%;
            border: 0.09375rem solid var(--t5e-color-gold);
          }
        }

        &.square {
          padding: var(--t5e-size-1x);
          --inset: 0.5625rem;

          &::before {
            border-width: 0.0625rem;
          }

          img {
            box-shadow: var(--header-shadow);
          }
        }

        &.transparent {

          &::before {
            border-color: var(--t5e-color-palette-gold-56);
            border-radius: 100%;
            border-width: 0.125rem;
            z-index: -1;
          }

          &:hover::before {
            border-color: var(--t5e-color-palette-gold-75);
          }
        }

        &.token {
          img {
            filter: var(--t5e-filter-drop-shadow-token);
          }

          &::before {
            border: none;
          }
        }

        &.dead {
          &:not(.transparent) {
            background-color: var(--t5e-component-card-dark-darker);

            .dead-overlay {
              // &::before {
              content: '';
              position: absolute;
              top: 0;
              left: 0;
              right: 0;
              bottom: 0;
              background-color: var(--t5e-color-palette-red-100);
              opacity: 0.6;
              mix-blend-mode: multiply;

              &::after {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background-color: var(--t5e-color-gold);
                opacity: 0.2;
                mix-blend-mode: lighten;
              }
            }
          }

          .dead-overlay {
            pointer-events: none;
          }

          img {
            z-index: -1;
          }

          &.transparent {
            img {
              filter: grayscale(1);
              opacity: 0.75;
            }

            &::before {
              border-color: var(--t5e-color-palette-red-60);
            }
          }

          &.round {
            .dead-overlay {
              border-radius: 100%;
            }
          }
        }
      }

      .death-saves-overlay {
        // TODO: Somehow move this to the component to load on-demand only? The css doesn't quite work when I try it right now.
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: var(--t5e-size-8x);

        pointer-events: none;

        >* {
          pointer-events: all;
        }

        :where(.successes, .failures) button {
          cursor: pointer;
          border-radius: 100%;
          border: 0.125rem solid var(--t5e-color-gold);
          background-color: var(--t5e-component-card-dark-darker);
          height: 1.5rem;
          min-height: 1.5rem;
          position: relative;
          transition: all var(--t5e-transition-default);
          width: 1.5rem;

          display: flex;
          align-items: center;
          justify-content: center;

          i {
            font-size: var(--font-size-12);
            color: var(--t5e-color-text-gold);
            font-weight: 500;
            transition: all var(--t5e-transition-default);
          }

          &.checked i {
            font-weight: 900;
          }

          &:active,
          &:focus-within,
          &:hover {
            border: 0.125rem solid var(--t5e-color-palette-white);
            box-shadow: 0 0 0.3125rem var(--t5e-color-gold);

            i {
              color: var(--t5e-color-palette-gold-89);
            }
          }
        }

        .successes,
        .failures {
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
          gap: 0.25rem;
          flex-direction: column-reverse;
        }

        &:hover .death-save-roll-button {
          opacity: 1;
        }

        .death-save-roll-button {
          --size: 3.5rem;
          position: absolute;
          font-weight: 900;

          display: flex;
          align-items: center;
          justify-self: center;
          opacity: 0;
          text-align: center;
          top: 50%;
          left: 50%;
          transform: translateY(-50%) translateX(-50%);
          text-shadow: 0 0 10.375rem rgba(0, 0, 0, 0.72);
          transition: opacity var(--t5e-transition-default);

          &.button-borderless.button-icon-only:hover {
            background: none;

            i {
              color: var(--t5e-color-palette-gold-89);
            }
          }

          i {
            position: relative;
            font-size: 3rem;
            color: var(--t5e-color-palette-gold-75);
          }
        }

        .successes {
          right: 0;

          .button:hover {
            box-shadow: 0 0 0.5rem var(--t5e-color-gold);
          }

          .checked {
            border-color: var(--t5e-color-palette-gold-62);
            background-color: var(--t5e-color-palette-gold-45);

            i {
              color: var(--t5e-color-text-default);
              text-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.24);
            }

            &:active,
            &:focus-within,
            &:hover {
              background-color: var(--t5e-color-palette-gold-56);
              border-color: var(--t5e-color-palette-gold-89);
            }
          }
        }

        .failures {
          left: 0;

          i {
            margin-bottom: 0.0625rem;
          }

          .button:hover {
            box-shadow: 0 0 0.5rem var(--t5e-color-palette-red-100);
          }

          .checked {
            border-color: var(--t5e-color-palette-gold-62);
            background-color: var(--t5e-color-palette-red-60);

            i {
              color: var(--t5e-color-text-default);
              text-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.24);
            }

            &:active,
            &:focus-within,
            &:hover {
              background-color: var(--t5e-color-palette-red-60);
              border-color: var(--t5e-color-palette-gold-89);

              i {
                color: var(--t5e-color-text-default);
              }
            }
          }
        }

        // Target death-saves-overlay when character is dead (using parent container)
      }

      // Death saves overlay styling when character is dead
      &:has(.dead) .death-saves-overlay {

        .death-save-roll-button {
          opacity: 1;

          i::before {
            content: '';
            color: rgba(255, 255, 255, 0.64);
          }
        }
      }
    }

    .actor-vitals {
      margin-top: -1.5rem;
      border-radius: 0.125rem;
      border: 0.125rem solid var(--t5e-color-gold);
      background-color: var(--t5e-component-card-dark-darker);
      box-shadow: var(--header-shadow);
      position: absolute;
      bottom: 0;
      width: 100%;


      .button {
        border-radius: 0;
      }

      .meter {
        background-color: var(--t5e-color-component-card-dark-darker);
        border: none;
        border-radius: 0;
      }

      .hit-points {
        height: var(--t5e-field-size-default);

        input[type="text"] {
          text-align: left;
          font-size: var(--font-size-18);
          padding-left: var(--t5e-size-2x);
          background-color: var(--t5e-color-hp-dark);
          border: 0.125rem solid var(--t5e-color-hp-medium);
          caret-color: #ffffff;
        }

        .label {
          font-size: var(--font-size-18);
          transition: all var(--t5e-transition-default);
          justify-content: flex-start;

          &:hover {
            text-shadow: 0 0 0.3125rem var(--t5e-color-text-gold-emphasis);
          }

          &:focus,
          &:active {
            background-color: inherit;
            border: none;
            outline: none;
          }
        }

      }

      .hp-row {
        position: relative;

        .hit-points {
          flex: 1;
        }

        .hit-points:has(+.button.editMode) {
          box-shadow: 0.125rem 0 0 var(--t5e-color-gold);
        }

        .button.button-icon-only.button-borderless {
          &:not(.editMode) {
            position: absolute;
            right: 0;
          }

          flex: 0 1 auto;

          i {
            font-size: var(--font-size-14);
            margin-bottom: 0.0625rem;
            margin-left: 0.0625rem;
          }

          &:hover {
            background-color: var(--t5e-color-hp-temp-dark);
          }
        }

        .button-config {
          border-radius: 0;
          background-color: var(--t5e-color-hp-dark);

          &:hover {
            background-color: var(--t5e-color-hp-dark);
          }
        }

        .temp-hp {
          height: 1.75rem;

          display: flex;
          flex: 0 1 auto;
          align-items: center;
          justify-content: center;
          padding: 0 0.5rem;
          transition: all var(--t5e-transition-default);

          &.label {
            background-color: var(--t5e-color-hp-temp);
            border-left: 0.0625rem dashed var(--t5e-color-palette-white);
          }

          &.label:hover {
            background-color: var(--t5e-color-hp-temp-dark);
          }
        }
      }

      input[type="text"].hp-temp-input {
        background-color: var(--t5e-color-hp-temp-dark);
        border-color: var(--t5e-color-hp-temp);
        font: var(--t5e-font-label-large);
        outline: none;
        position: relative;
        text-align: right;
      }

      ::selection {
        padding: 0 var(--t5e-size-1x);
        color: var(--t5e-color-text-default);
        background-color: rgba(0, 0, 0, 0.5);
      }

      .actor-vitals-row {
        --t5e-vitals-button-icon-color: var(--t5e-color-palette-gold-89);
        border-top: 0.125rem solid var(--t5e-color-gold);
        box-sizing: content-box;
        padding: 0;
        height: var(--t5e-size-6x);
        display: flex;
        flex: 1;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        gap: var(--t5e-size-halfx);
        position: relative;

        .label {
          font-size: var(--font-size-14);
          line-height: var(--line-height-16);
        }

        >*:not(:first-child) {
          position: relative;
        }

        >*:not(:first-child)::before {
          content: '';
          position: absolute;
          left: -0.125rem;
          top: 50%;
          transform: translateY(-50%);
          height: calc(100% + 0.125rem);
          width: 0.125rem;
          background-color: var(--t5e-color-gold);
        }

        input[type="text"].max-hp {
          height: calc(var(--t5e-field-size-default) - 0.125rem);
          color: var(--t5e-color-text-default);
          font-size: var(--font-size-15);
          font-weight: var(--font-weight-label);

          &:hover,
          &:focus,
          &:active {
            background-color: var(--t5e-component-field-background-hover-emphasis);
          }

          &::placeholder {
            color: var(--t5e-color-text-gold);
            font: var(--t5e-font-label-medium);
          }

          &::selection {
            background-color: var(--t5e-theme-color-darker);
          }
        }

        .exhaustion {
          width: auto;

          .button {
            padding: 0 0 0 0.0625rem;
            width: 1.5rem;

            i {
              color: var(--t5e-vitals-button-icon-color);
            }
          }

          .value {
            display: none;
          }

          &.exhausted {
            background-color: var(--t5e-color-palette-orange-40);

            i,
            .value {
              color: var(--t5e-color-icon-default);
              text-shadow: 0 0 0.5rem var(--t5e-color-palette-orange-100);
            }

            .button {
              padding: 0 0.25rem 0.0625rem 0.5rem;
              width: auto;
            }

            .value {
              display: initial;
            }
          }
        }

        .exhaustion.exhausted,
        .exhaustion-bar {
          button.button-icon-only.button-borderless:not(:first-child) {

            &:hover,
            &:focus,
            &:active {
              background-color: var(--t5e-color-palette-orange-55);
            }
          }
        }

        .death-saves {
          i {
            color: var(--t5e-vitals-button-icon-color);
          }

          &.dying {
            background-color: var(--t5e-color-palette-red-45);

            i {
              color: var(--t5e-color-icon-default);
              text-shadow: 0 0 0.5rem var(--t5e-color-palette-red-100);
            }

            .button:hover {
              background-color: var(--t5e-color-palette-red-27);
            }
          }
        }

        .button {
          border-left: none;
          border-radius: 0;
          box-sizing: border-box;
          padding: 0 0 0.0625rem 0.0625rem;

          --size: 1.5rem;
          min-height: var(--size);
          height: var(--size);
          width: var(--size);

          i {
            font-size: var(--font-size-13);
          }

          &:hover {
            background-color: black;

            i {
              color: var(--t5e-color-text-default);
            }
          }
        }

        .button-config {
          color: var(--t5e-color-icon-button);
          background-color: transparent;

          &:hover {
            background-color: var(--t5e-color-hp-hd-dark);
          }
        }
      }

      .hd-row {
        flex: 1;
      }

      .max {
        color: var(--t5e-color-text-lighter);
      }

      .hit-die {
        position: relative;

        .label {
          cursor: auto;
          justify-content: flex-start;
          transition: all var(--t5e-transition-default);

          &:hover {
            text-shadow: 0 0 0.3125rem var(--t5e-color-text-gold-emphasis);
          }

          &:focus,
          &:active {
            background-color: inherit;
            border: none;
            outline: none;
          }
        }

        .hd-label {
          color: var(--t5e-color-text-gold);
          font-weight: var(--t5e-font-weight-label);
        }

        input[type="text"] {
          height: 1.5rem;
          text-align: left;
          font-size: var(--font-size-16);
          padding-left: var(--t5e-size-2x);
          background-color: var(--t5e-color-hp-hd-dark);
          border: 0.125rem solid var(--t5e-color-hp-hd-medium);
          caret-color: var(--t5e-color-text-default);
        }

        .button-config {
          position: absolute;
          right: 0;
        }
      }

      .exhaustion-bar {
        position: absolute;
        bottom: -0.125rem;
        left: -0.125rem;
        top: -0.125rem;
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        border-radius: 0.125rem;
        border: 0.125rem solid var(--t5e-color-gold);
        height: 1.75rem;
        width: max-content;
        background-color: var(--t5e-component-card-dark-darker);
        z-index: 1; // TODO: This is a hack

        .button {
          border-radius: 0;

          &.active {
            font-weight: var(--font-weight-bold);
            background-color: var(--t5e-color-palette-orange-40);
            color: var(--t5e-color-icon-default);
            text-shadow: 0 0 0.5rem var(--t5e-color-palette-orange-100);
          }
        }
      }
    }

    .actor-name {
      flex-grow: 1;
      margin: 0 0 0 var(--header-padding);
      text-shadow: var(--header-shadow);
      line-height: 100%;
      text-wrap: nowrap;
      overflow: hidden;
    }

    input[type="text"]:not(:disabled):not(.uninput) {
      border: 0.0625rem solid transparent;
      background-color: transparent;

      &.actor-name {
        flex: 1;
        margin: 0 var(--t5e-size-2x) var(--t5e-size-halfx) .5rem;
        height: 2.75rem;
      }

      &.xp-value {
        text-align: right;
        --t5e-field-background-color: rgba(0, 0, 0, 0.40);
        background-color: var(--t5e-field-background-color);
      }

      &:hover,
      &:focus,
      &:active {
        --t5e-field-background-color: rgba(0, 0, 0, 0.40);
        background-color: var(--t5e-field-background-color);
      }

      &:focus,
      &:active {
        border-color: transparent;
      }


      &::selection {
        background-color: var(--t5e-theme-color-default);
      }
    }

    .actor-subtitle {
      margin-left: var(--header-padding);
      flex: 1;
      text-shadow: var(--header-shadow);
      container-type: inline-size;
      container-name: subtitle;

      >span {
        flex: 0;
        text-wrap: nowrap;
      }

      >.divider-dot:last-child {
        display: none;
      }

      .dc {
        margin-left: 0.125rem;
      }

      button {
        padding: 0;
        border: none;
        background: none;

        &:hover,
        &:active,
        &:focus {
          background: none;
          border: none;

          span {
            text-shadow: 0 0 0.5rem var(--t5e-color-text-gold);
          }
        }
      }

    }

    .xp-container {
      flex: 0 1 auto;
      margin: 0 0.5rem 0.125rem 0;
      gap: var(--t5e-size-1x);
      display: flex;
      flex-direction: column;
      align-items: flex-end;

      .label {
        margin-right: var(--t5e-size-1x);
      }

      input[type="text"] {
        max-width: 5rem;
        width: fit-content;
      }

      .xp-bar {
        --meter-height: 0.625rem;
        background-color: var(--t5e-component-card-dark-darker);
        border-radius: 0.375rem;
        flex: auto;
        min-width: 7rem;

        &:before {
          border-right: none;
        }
      }
    }
  }

  .sheet-header-actions {
    margin-right: var(--t5e-size-3x);
    margin-left: var(--t5e-size-2x);
    align-items: center;
    gap: var(--t5e-size-2x);
    flex: 0 0 fit-content;

    .button-gold {
      border: 0.125rem solid var(--t5e-color-palette-gold-62);
      border-radius: 0.1875rem;
      box-shadow: var(--header-shadow);

      i {
        color: var(--t5e-color-palette-gold-75);
      }

      &:hover,
      &:focus,
      &:active {
        border: 0.125rem solid var(--t5e-color-palette-gold-89);

        i {
          color: var(--t5e-color-palette-gold-89);
        }
      }

      &:disabled {
        box-shadow: none;
        border-color: var(--t5e-color-palette-gold-56);
        pointer-events: none;

        i {
          color: var(--t5e-color-palette-gold-56);
        }
      }
    }
  }

  .actor-details-subtitle-row {
    container-type: inline-size;
  }

  .level-container {
    align-items: center;
    position: relative;
    margin-top: calc(var(--t5e-size-2x) + var(--t5e-size-halfx));

    .inspiration-badge {
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      display: flex;
      align-items: center;
      justify-content: center;

      &.stacked {
        left: -0.25rem;
      }
    }

    .inspiration {
      transition: all var(--t5e-transition-default);
      outline: none;

      &.button {
        width: 2.5rem;
        height: 2.5rem;
        display: flex;
        align-items: center;
        justify-content: center;

        &:not(.inspired) .level {
          color: var(--t5e-color-text-lighter);
        }

        &:hover,
        &:focus,
        &:active {
          background-color: var(--t5e-theme-color-highlight);
        }
      }

      // TODO: Deal with specificity issues that are requiring this extra arbitrary specificity
      &.single.single.single {
        background: url(../../modules/tidy5e-sheet/images/badge_inspiration_single.webp) center / contain no-repeat;

        &::before {
          transition: all var(--t5e-transition-default);
          // TODO: Fix weird hover behavior.
          box-shadow: 0 0 0.5rem 0.1875rem var(--t5e-theme-color-highlight);
          display: block;
          width: 0.75rem;
          height: 0.75rem;
          background-color: var(--t5e-color-palette-white);
          border: 0.0625rem solid var(--t5e-theme-color-highlight);
          outline: none;
          transform: translate(-50%, -50%) rotate(45deg);
          z-index: 0;

          position: absolute;
          left: 50%;
          top: 50%;
        }

        &:hover,
        &:focus,
        &:active {
          background: url(../../modules/tidy5e-sheet/images/badge_inspiration_single.webp) center / contain no-repeat;
          filter: drop-shadow(0 0 0.375rem var(--t5e-theme-color-highlight));
        }

        &.inspired::before {
          content: '';
        }


        &:hover::before {
          width: 0.75rem;
          height: 0.75rem;
          border-width: 0.0625rem;
          box-shadow: 0 0 0.75rem 0.1875rem var(--t5e-theme-color-highlight);
        }
      }

      // TODO: Deal with specificity issues that are requiring this extra arbitrary specificity
      &.stacked.stacked.stacked {
        background: url(../../modules/tidy5e-sheet/images/badge_inspiration_stacked.webp) center / contain no-repeat;
        width: 2.75rem;
        height: 2.75rem;


        .inspiration-level {
          width: 1.25rem;
          height: 1.25rem;
          border-radius: 100%;
          border: 0.0625rem solid transparent;
          transition: all var(--t5e-transition-default);
          outline: none;
          display: flex;
          align-items: center;
          justify-content: center;
          text-align: center;
        }

        .level {
          text-align: center;
          font-size: var(--font-size-16);
        }

        &.inspired .inspiration-level {
          box-shadow: 0 0 0.5rem 0.1875rem var(--t5e-theme-color-highlight);
          content: '';
          background-color: var(--t5e-color-palette-white);
          border-color: var(--t5e-theme-color-highlight);

        }

        &:hover,
        &:focus,
        &:active {
          background: url(../../modules/tidy5e-sheet/images/badge_inspiration_stacked.webp) center / contain no-repeat;
          filter: drop-shadow(0 0 0.375rem var(--t5e-theme-color-highlight));
        }
      }
    }

    .inspiration-controls {
      display: none;
    }

    .inspiration-badge:hover {
      .inspiration-controls {
        display: flex;
        position: absolute;
        left: 0;
        bottom: 0.25rem;
        gap: 0.25rem;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;

        .button.button-borderless {
          --size: 1.25rem;
          min-width: var(--size);
          border-radius: 100%;
          position: relative;
          outline: none;

          i {
            font-size: var(--font-size-13);
            position: relative;
          }

          &:hover {
            background-color: transparent;
          }

          &::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translateY(-50%) translateX(-50%);
            background: rgba(0, 0, 0, 0.32);
            width: 1.25rem;
            height: 1.25rem;
            border-radius: 100%;
          }

          &:not(:disabled):hover::before {
            width: 1.25rem;
            height: 1.25rem;
            background: rgba(0, 0, 0, 0.64);
          }

          &:disabled,
          &:disabled:hover {
            background-color: transparent;

            i {
              color: var(--t5e-color-icon-disabled);
              text-shadow: none;
            }
          }
        }
      }
    }
  }

  .level-block {
    background: url(../../modules/tidy5e-sheet/images/badge_level_dark.webp) top center / auto no-repeat;
    background-size: contain;
    margin-left: 1.1875rem;
    margin-right: var(--t5e-size-2x);
    min-width: 4.75rem;
    min-height: 4.75rem;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    .level {
      margin: -0.25rem 0 -0.25rem 0;
    }

    .proficiency-bonus {
      .label {
        margin-right: var(--t5e-size-halfx);
      }
    }
  }

  .abilities-container {
    container-name: abilities;
    container-type: inline-size;
    overflow-x: auto;
    overflow-y: hidden;

    .bonus {
      margin-right: 0.125rem;
      margin-left: 0.125rem;
    }

    .save {
      margin-right: var(--t5e-size-1x);
    }

    .icon i {
      font-size: var(--font-size-11);
      color: var(--t5e-color-gold);
    }
  }


  .abilities-container-inner {
    position: relative;
    min-height: 6.625rem;
    gap: var(--t5e-size-1x);
    margin: var(--t5e-size-2x) 0 0 var(--header-padding);
    align-items: stretch;
    flex-wrap: nowrap;
    padding-bottom: 0.25rem;
  }

  &.abilities-overflow .abilities-container-inner {
    gap: 0;
    max-width: 100%;

    .initiative {
      width: 3.25rem;
      flex-grow: 0;
    }
  }

  .shield {
    background-position: top center;
    background-size: contain;
    background-repeat: no-repeat;
    height: 4.25rem;
    color: var(--t5e-color-text-light);
    font-weight: bold;
    font-size: 1.25rem;
    position: relative;
    width: 4rem;
    transition: height var(--t5e-transition-default), width var(--t5e-transition-default);

    display: flex;
    flex-direction: column;
    justify-content: center;

    .ac-value {
      font-size: var(--font-size-28);
      letter-spacing: var(--t5e-font-letter-spacing-xlarge);
      margin: 0.375rem 0.0625rem 0.75rem 0;
    }

    .ac-label {
      display: none;
    }
  }

  .ability-labels {
    justify-content: end;
    margin-top: 0.1875rem;

    .label {
      color: var(--t5e-color-text-lightest);
      text-transform: none;
    }

    .divider {
      background-color: var(--t5e-color-gold);
      opacity: 0.5;
      width: 100%;
      height: 0.0625rem;
      margin: 0.3125rem 0;
    }
  }

  .ability {
    max-width: 4.5rem;

    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;

    .button-config {
      position: absolute;
      bottom: -0.625rem;
      right: -0.5rem;
    }

    .bonus-container {
      aspect-ratio: 1/1.125;
      background: url(../../modules/tidy5e-sheet/images/badge_ability_dark.webp) top center / auto no-repeat;
      background-size: contain;
      padding-top: var(--t5e-size-halfx);
      position: relative;
      text-align: center;
      width: 100%;
      min-width: 3.625rem;
      max-width: 4rem;
      overflow: visible;

      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;

      &.proficient {
        background: url(../../modules/tidy5e-sheet/images/badge_ability_dark_prof.webp) top center / auto no-repeat;
        background-size: contain;
      }

      &:has(.ability-score-input:focus) :where(.modifier, .value) {
        visibility: hidden;
      }

      .ability-score-input {
        position: absolute;
        inset: 1.75rem 0 0 0;
        height: calc(100% - 2.5rem);
        text-align: center;
        font: var(--t5e-font-data-xlarge);
        // font-size: 2rem;
        background: none;
        opacity: 0;

        &.editing-score {
          opacity: 1;
        }
      }

      .editing-score-label {
        font: var(--t5e-font-label-medium);
        position: absolute;
        top: calc(100% + 0.125rem);
      }
    }

    &:has(.button-config) {
      .ability-score {
        cursor: pointer;

        &:hover {
          color: var(--t5e-color-text-default);
          text-shadow: 0 0 0.375rem var(--t5e-color-text-gold);
        }
      }
    }

    .ability-score {
      background: url(../../modules/tidy5e-sheet/images/badge_score_dark.webp) top center / auto no-repeat;
      background-size: contain;
      height: 2rem;
      margin-top: -0.75rem;
      position: relative;
      width: 1.75rem;

      display: flex;
      align-items: center;
      justify-content: center;

      pointer-events: initial;
    }

    .ability-save {
      border: none;
      gap: 0.0625rem;
      height: 1.75rem;
      padding: 0;
      align-items: center;
      text-shadow: var(--header-shadow);

      .icon {
        margin-bottom: var(--t5e-size-halfx);
      }

      i {
        color: var(--t5e-color-text-gold-emphasis);
        font-size: var(--font-size-13);
        line-height: var(--font-size-13);
      }

      .modifier,
      .value {
        font-size: var(--font-size-14);
      }

      &:hover,
      &:focus,
      &:active {
        text-shadow: 0 0 0.375rem var(--t5e-color-text-gold);
      }
    }
  }

  .ability-roll-button {
    margin-bottom: -2.25rem;
    padding: 0 .75rem 2rem;
  }

  .initiative-roll-button {
    margin-top: -2rem;
    padding: 1.825rem .5rem 0;
  }

  .ability-roll-button,
  .initiative-roll-button {
    color: var(--t5e-color-text-gold-emphasis);
    font: var(--t5e-font-label-medium);
    height: auto;
    line-height: normal;
    min-height: auto;
    text-transform: uppercase;
    transition: all var(--t5e-transition-default);

    ~div span {
      transition: all var(--t5e-transition-default);
    }

    +div:not(:has(.ability-score-input)) {
      pointer-events: none;
    }

    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      color: var(--t5e-color-text-gold-light);

      ~* {
        text-shadow: 0 0 0.375rem var(--t5e-color-text-gold);
      }
    }

    &:active,
    &:focus,
    &:focus-within {
      border: none;
      background: none;
      outline: none;
      box-shadow: none;
    }
  }

  .initiative-container {
    width: 3rem;
    max-width: 4rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.325rem;
    position: relative;

    .initiative.score {
      background: url(../../modules/tidy5e-sheet/images/badge_init_dark.webp) top center / auto no-repeat;
      background-size: contain;
      border-radius: var(--t5e-size-1x);
      height: 3.75rem;
      margin-top: 0.3125rem;
      padding-top: var(--t5e-size-halfx);
      width: 3.25rem;
      position: relative;

      display: flex;
      align-items: center;
      flex-direction: column-reverse;
      flex-grow: 0;
      justify-content: center;

      .initiative-bonus {
        margin-right: 0.125rem;
        margin-top: -0.3125rem;
        margin-bottom: -0.0625rem;
      }

      .modifier,
      .bonus {
        display: inline-block;
        font-size: 1.5rem;
      }

      .modifier {
        color: var(--t5e-color-text-lightest);
      }

      .bonus {
        font-weight: bold;
      }

      .button-config {
        position: absolute;
        bottom: -0.75rem;
        right: -0.625rem;
      }
    }


    .ability-labels {
      align-items: center;
      justify-content: end;
      position: absolute;
      left: 0;
      right: 0;
      bottom: 0.4375rem;

      .divider {
        width: 75%;
      }
    }
  }

  @mixin ability-smaller {
    --collapse-font-medium: 1.4375rem;

    .ability-bonus-container {
      min-width: auto;
    }

    .ability .bonus-container,
    .ability .bonus-container.proficient,
    .initiative-container .initiative.score {
      width: 100%;
      height: auto;
      min-width: auto;
    }

    .bonus-container,
    .initiative-bonus {

      .modifier,
      .bonus {
        font-size: var(--collapse-font-medium);
        margin-left: 0;
      }
    }

    .initiative-container .initiative.score {
      margin: 0.125rem 0;
      min-height: 3.75rem;
    }
  }

  .limited-sheet {
    &.sheet-header {
      .actor-vitals-container {
        padding-bottom: 1.5rem;
        max-width: 10rem;
      }

      .actor-image img {
        max-width: 10rem;
        max-height: 10rem;
      }

      .actor-name {
        margin-bottom: 1.5rem;
      }
    }

    .editor-rendered-content {
      border: none;
      margin: var(--t5e-size-4x) 0;
      padding: 0 var(--t5e-size-4x);
    }
  }

  @container subtitle (width < 37.5rem) {
    .hide-under-600 {
      display: none;
    }
  }

  @container subtitle (width < 31.25rem) {
    .hide-under-500 {
      display: none;
    }
  }

  @container subtitle (width < 25rem) {
    .hide-under-400 {
      display: none;
    }
  }

  @container actor-sheet (width > 50rem) {
    --header-padding: 1.5rem;
  }

  @container actor-sheet (width < 50rem) {
    .sheet-header-content {
      // flex-direction: column-reverse;
      flex-wrap: wrap;
    }

    .hide-10 {
      display: none;
    }

  }

  @container actor-sheet (width < 43.75rem) {
    .sheet-header .actor-vitals-container {
      max-width: 10rem;

      .actor-image img {
        height: 10rem;
        width: 10rem;
      }
    }
  }

  .tidy-tab-contents {
    &.active {
      display: flex;
      flex-direction: column;
      gap: var(--t5e-size-3x);
    }
  }

  @container sheet-tabs (max-width: 53.75rem) {

    /* Hide icons when there are more than 7 tabs */
    .tidy-tabs.actor-tabs:has(> :nth-child(8)) {
      >.tab-option i {
        display: none;
      }
    }
  }

  @container sheet-tabs (max-width: 43.75rem) {
    .tidy-tabs.actor-tabs:has(> :nth-child(7)) {
      >.tab-option i {
        display: none;
      }
    }
  }


  div.divider-dot {
    width: 0.1875rem;
    height: 0.1875rem;
    border-radius: 100%;
    background-color: var(--t5e-color-gold);
    opacity: 0.72;
    margin: 0 0.3125rem;
    flex: initial;
  }

  i.highlighted {
    color: var(--t5e-theme-color-highlight);

    &:hover {
      text-shadow: 0 0 0.25rem oklch(from var(--t5e-theme-color-lighter) l c h / 0.5);
    }
  }

  .tidy-tab-contents {
    &.active {
      display: flex;
      flex-direction: column;
      gap: var(--t5e-size-3x);
    }
  }

  .tidy-tab {

    .tools {
      // .skill-expand-button.view-only {
      //   pointer-events: none;
      // }

      .tools-empty {
        padding: var(--t5e-size-3x) var(--t5e-size-2x);
        color: var(--t5e-color-text-lighter);

        &:hover {
          color: var(--t5e-color-text-default);
        }
      }
    }
  }

  h3.font-title-small {
    display: flex;
    align-items: center;

    >i {
      font-size: var(--font-size-14);
      margin-inline-end: var(--t5e-size-1x);
      color: var(--t5e-color-text-lightest);
    }

    .counter {
      padding-left: 0.25rem;
    }
  }

  .sheet-footer {
    gap: var(--t5e-size-2x);

    >* {
      gap: var(--t5e-size-2x);
    }

    &.fixed {
      padding: var(--t5e-size-1x) 0 var(--t5e-size-3x) 0;
    }

    .sheet-footer-left {
      gap: var(--t5e-size-2x);
    }

    .sheet-footer-right {
      gap: var(--t5e-size-2x);
    }

    .footer-content-left {
      justify-content: flex-start;
    }

    .footer-content-right {
      justify-content: flex-end;
    }
  }

  .inventory-footer {
    container-type: inline-size;
    container-name: inventory-footer;

    &.fixed {
      padding-bottom: 0;

    }


    .attunement-tracker {
      height: var(--t5e-field-size-default);
      gap: var(--t5e-size-1x);

      span {
        padding-block-end: var(--t5e-size-1);
      }

      &.pill {
        background: var(--t5e-component-card-default);
        box-shadow: var(--t5e-drop-shadow-field);
      }

      &.attuned i:hover {
        text-shadow: 0 0 0.25rem oklch(from var(--t5e-theme-color-lighter) l c h / 0.5);
      }

      input {
        flex: 0 1 fit-content;
        max-width: 2rem;
      }
    }

    .currency-container {
      gap: var(--t5e-size-2x);

      .denomination {
        text-transform: uppercase;
      }
    }

    .input-group:has(input[type='text']:disabled) {
      border: 0.0625rem solid var(--t5e-component-pill-border);
      background: var(--t5e-component-pill-background);
    }
  }

  .spellbook-footer {
    align-items: flex-start;
    min-height: 2.25rem;
    position: sticky;
    bottom: 0;

    .sheet-footer-right {
      padding-block-start: 0.375rem;
    }

    .sheet-footer-left:has(.compact)+.sheet-footer-right {
      padding-block-start: 0.25rem;
    }

    .spellcasting-class-card {
      border-radius: var(--t5e-size-1x);
      border: 0.0625rem solid var(--t5e-component-field-border);
      background: var(--t5e-component-field-background);
      padding: var(--t5e-size-2x) var(--t5e-size-3x);

      .primary-icon {
        margin-inline-start: 0.375rem;
      }

      &:not(.primary) .primary-icon {
        color: var(--t5e-color-text-lighter);
      }

      .info {
        justify-content: flex-end;
      }

      >* {
        display: flex;
        align-items: center;
      }

      &.compact {
        padding: var(--t5e-size-1x) var(--t5e-size-1x) var(--t5e-size-1x) var(--t5e-size-3x);

        button {
          margin-inline-start: 0.375rem;
        }
      }
    }

    &:has(.compact) {
      @container tab-content (width > 35rem) {
        >.spellcasting-cards {
          display: grid;
          grid-template-columns: repeat(auto-fit,
              minmax(18rem, 1fr));
        }
      }
    }
  }

  // Floating spell slots footer for Sheet tab
  .spell-slots-footer {
    align-items: flex-start;
    min-height: 2.0rem;
    position: sticky;
    bottom: 0;

    .sheet-footer-right {
      padding-block-start: 0.375rem;
    }

    .spell-slots-card {
      border-radius: var(--t5e-size-1x);
      border: 0.0625rem solid var(--t5e-component-field-border);
      background: var(--t5e-component-field-background);
      padding: var(--t5e-size-2x) var(--t5e-size-3x);
      flex: 1;

      .spell-slots-card-content {
        align-items: center;
        gap: var(--t5e-size-2x);

        .header {
          .name {
            color: var(--t5e-color-text-default);
          }
        }

        .info {
          justify-content: flex-end;
          gap: 0.25rem;
          flex-wrap: wrap;

          .slot-entry {
            display: inline-flex;
            gap: 0.125rem;
            align-items: center;

            .level {
              font-weight: 600;
            }

            .sep {
              opacity: 0.85;
            }
          }

          .dot {
            opacity: 0.7;
            margin: 0 0.25rem;
            align-self: center;
          }

          .spell-slot-config {
            margin-left: 1.0rem;
            padding: 0;
            height: 1rem;
            width: 1rem;
            min-height: 1rem;
            line-height: 1;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border: none;
            background: transparent;
            color: var(--t5e-color-text-lighter);
            cursor: pointer;
            
            &:hover {
              color: var(--t5e-color-text-gold);
            }

            i {
              font-size: 0.75rem;
              line-height: 1;
            }
          }
        }
      }
    }
  }

  @container inventory-footer (width < 35rem) {
    .currency-container {
      order: 1;
      flex: 1;
      min-width: fit-content;
      flex-direction: row;

      .input-group {
        padding-inline-start: 0.5rem;
      }

      .currency {
        display: none;
      }
    }

    .footer-content-left {
      order: 2;
      flex: 1;
    }

    .footer-content-right {
      order: 3;
    }
  }

  @import './character-parts/favorites.scss';


  .window-header {
    .window-title {
      visibility: hidden;
    }
  }

  &:is(.minimized) {
    .window-title {
      visibility: visible;
    }

    .configurable-source {
      display: none;
    }
  }

  .character-traits {
    padding-bottom: var(--t5e-size-12x);
  }

  .character-traits-header {
    align-items: flex-start;
    gap: var(--t5e-size-2x);

    .character-traits-title {
      padding-top: var(--t5e-size-1x);
    }

    .button {
      flex: 0;
      text-wrap: nowrap;
    }
  }

  .traits {

    &.list {
      .trait-item {
        gap: var(--t5e-size-1x);
        margin-right: var(--t5e-size-2x);
      }

      .list-label {
        flex: 1;
        margin-right: var(--t5e-size-4x);

        i {
          color: var(--t5e-color-icon-diminished);
        }
      }

      // TODO: Fix responsive behavior to handle small screens in edit mode.
      .list-content {
        flex: 2;
        min-width: 0;
        flex-wrap: wrap;
        gap: var(--t5e-size-1x);
      }


      .list-entry {

        .item-image-link {
          width: 1.75rem;
          height: 1.75rem;
          margin-right: var(--t5e-size-1x);
          overflow: hidden;
          background-color: var(--t5e-color-palette-gold-56);
          color: var(--t5e-color-text-oninverse-default);
          align-items: center;
          justify-content: center;
          display: flex;
        }

        &.empty {
          .list-label {
            h4 {
              color: var(--t5e-color-text-lighter);
            }

            i {
              color: var(--t5e-color-icon-disabled);
            }
          }
        }
      }

      .list-sub-entry {
        .item-image-link {
          width: 1.5rem;
          height: 1.5rem;
          background-color: var(--t5e-color-palette-gold-56);
        }

        .sub-entry-icon {
          color: var(--t5e-color-icon-disabled);
          display: flex;
          align-items: center;
          justify-content: center;
          font-size: var(--font-size-12);
          width: 1.5rem;
          height: 1.5rem;
        }
      }

      .item-image-link {
        border: 0.0625rem solid var(--t5e-color-gold);
        border-radius: 0.125rem;
        transition: box-shadow var(--t5e-transition-default);

        &:hover {
          box-shadow: 0 0 0.375rem var(--t5e-color-text-gold-emphasis);
        }
      }

      .divider-dot {
        margin: 0;
      }

      .icon-class-original {
        margin-left: var(--t5e-size-1x);
        padding-bottom: 0.0625rem;
      }

      .list-controls {
        display: flex;
        flex-direction: row;
        align-items: center;
        flex: 0;
        justify-content: end;

        &:has(.level-selector) {
          justify-content: start;
        }

        select {
          flex: 0;
          margin-right: var(--t5e-size-1x);
        }
      }

      .pill {

        .units {
          margin-left: var(--t5e-size-halfx);
        }

        &:not(.positive, .negative) {
          background-color: var(--t5e-component-field-background);
        }

        &:is(.physical-bypass) {
          background-color: var(--t5e-color-palette-orange-55);
          border-color: var(--t5e-color-palette-orange-40);

          i {
            color: var(--t5e-icon-color-light);
          }
        }
      }
    }

    .class-item {
      display: flex;
      flex-direction: column;
      gap: var(--t5e-size-1x);
      flex: 1;

      .flexshrink {
        flex: 0 1 fit-content;
      }
    }
  }

  .filigree-card {
    background-color: var(--t5e-component-card-default);
    padding: 0.3125rem 0.875rem 0.5rem;
  }

  .card-header {
    display: flex;
    gap: var(--t5e-size-2x);
    padding: 0 var(--t5e-size-2x);
    height: var(--t5e-field-size-default);

    i {
      flex: 0;
    }
  }

  .cards-container {
    align-items: stretch;
    gap: var(--t5e-size-2x);
    flex-wrap: wrap;

    .card {
      background: var(--t5e-component-card-darker);
      border: 0.0625rem solid var(--t5e-component-field-border);
      border-radius: 0.25rem;
      box-shadow: var(--t5e-drop-shadow-field);
      display: flex;
      flex-direction: column;
      flex: 1;
      min-width: 10rem;
      max-width: calc(50% - var(--t5e-size-1x));
      padding: 0 0.75rem 0.5rem;
      transition: box-shadow var(--t5e-transition-default);

      .card-header {
        text-align: center;
        padding: 0;
      }

      .card-content {
        display: flex;
        flex: 1;
        align-items: center;
        justify-content: center;
      }

      &:hover,
      &:focus-within {
        box-shadow: var(--t5e-drop-shadow-card);
      }

      >* {
        gap: var(--t5e-size-1x);
      }
    }
  }

  .use-ability-header {
    display: flex;
    border-bottom: 0.0625rem solid var(--t5e-color-gold);
    height: var(--t5e-field-size-default);

    .button {
      gap: var(--t5e-size-2x);
      padding: 0 var(--t5e-size-2x) 0 var(--t5e-size-2x);

      &:hover {
        i {
          color: var(--t5e-color-icon-default);
        }
      }
    }

    h3 {
      align-items: start;
      display: flex;
      gap: var(--t5e-size-1x);
      flex: 1;
      text-shadow: inherit;
    }

    .skill-expand-button i {
      transition: var(--t5e-transition-default);
      margin-top: 0.0625rem;

      &.expanded {
        transform: rotate(90deg);
      }
    }

    .modifier-label {
      display: flex;
      justify-content: end;
    }
  }

  .saving-throws {
    .use-ability-header {
      i {
        flex: 0;
      }
    }
  }

  .use-ability-list {

    button.proficiency {
      --_fill: var(--t5e-theme-color-default);

      align-items: center;
      aspect-ratio: 1;
      background: transparent;
      border: none;
      display: flex;
      justify-content: center;
      position: relative;

      i {
        font-size: var(--font-size-11);
        color: var(--_fill);
        text-shadow: 0 0 0.25rem rgba(0, 0, 0, 0.24);
      }

      &.button-icon-only:hover {
        border: none;
        outline: none;
        background: transparent;
      }

      &:is([data-proficiency='0']) i {
        --_fill: var(--t5e-color-gold);
      }

      &:is([data-proficiency='2']) i {
        font-size: var(--font-size-12);
      }

      &:hover,
      &:focus,
      &:active {
        i {
          --_fill: var(--t5e-theme-color-darkest);
          color: var(--_fill);
        }

        &:is([data-proficiency='0']) i {
          --_fill: var(--t5e-color-text-gold-emphasis);
          color: var(--_fill);
        }
      }
    }

    &:not(.disabled) {
      select {
        font: var(--t5e-font-label-medium);
        color: var(--t5e-color-text-gold-emphasis);
        background-color: transparent;
        background-position: right 0 center;
        border: none;
        box-shadow: none;
        margin-right: 0.25rem;
        padding: 0 1rem 0 0;
        width: fit-content;

        &:hover,
        &:active,
        &:focus {
          background-color: transparent;
          text-shadow: 0 0 0.375rem var(--t5e-color-text-gold-emphasis);
          outline: none;

          option {
            color: var(--t5e-color-palette-grey-0);
            background-color: transparent;
            text-shadow: none;

            &:hover,
            &:focus,
            &:active,
            &:checked {
              color: var(--t5e-color-palette-grey-0);
              background-color: transparent;
              text-shadow: none;
            }
          }
        }
      }
    }

    li {
      width: 13.75rem;
      display: flex;
      flex-direction: row;
      justify-content: center;

      :is(button, .button) {
        padding-inline: 0;
      }

      .skill-ability {
        text-transform: uppercase;
      }

      .use-ability-roll-button {
        flex: 1;
        text-wrap: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;

        &[disabled] {
          color: var(--button-text);
        }
      }

      >* {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: flex-start;
        min-width: var(--t5e-field-size-default);
        min-height: var(--t5e-field-size-default);
      }

      >i {
        justify-content: center;
      }

      .modifier,
      .passive {
        justify-content: flex-end;
        padding-right: var(--t5e-size-2x);
      }

      &:not(:last-child) {
        border-bottom: 0.0625rem solid var(--t5e-table-row-divider);
      }
    }

    &.saving-throws-ability-column {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      column-gap: var(--t5e-size-2x);
      border-bottom: 0.0625rem solid var(--t5e-component-card-default);
      box-sizing: content-box;
      position: relative;

      li {
        min-width: auto;
        flex: 1;
        flex-basis: calc(50% - var(--t5e-size-1x));
        max-width: calc(50% - var(--t5e-size-1x));
        border-bottom: 0.0625rem solid var(--t5e-table-row-divider);
      }

      /* Apply 100% width only if last child is odd-numbered */
      li:last-child:nth-child(odd) {
        flex-basis: 100%;
        max-width: 100%;
      }

      &::after {
        content: '';
        bottom: 0;
        left: 0;
        right: 0;
        position: absolute;
        height: 0.0625rem;
        background-color: var(--t5e-component-card-default);
      }


      @container tab-right-column (inline-size < 27.5rem) {
        li {
          flex-basis: 100%;
          max-width: 100%;
        }
      }
    }
  }

  .level-selector {
    width: auto;
  }

  // Encumbrance
  .meter.encumbrance {
    .label {
      cursor: auto;
    }

    .breakpoint {
      display: block;
      position: absolute;
      block-size: 0;
      inline-size: 0;
      border-inline: 0.1875rem solid transparent;

      &.encumbrance-low {
        inset-inline-start: var(--encumbrance-low);
      }

      &.encumbrance-high {
        inset-inline-start: var(--encumbrance-high);
      }

      &.arrow-up {
        inset-block-end: 0;
        border-block-end: 0.1875rem solid var(--t5e-color-gold);
      }

      &.arrow-down {
        inset-block-start: 0;
        border-top: 0.1875rem solid var(--t5e-color-gold);
      }

      transform: translateX(-50%);
      z-index: 1;
    }
  }

  // Conditions
  .conditions-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(12.5rem, 1fr));
    gap: var(--t5e-size-1x);
    list-style: none;
    margin: var(--t5e-size-1x) 0 var(--t5e-size-3x);
    padding: 0;

    .condition {
      padding: var(--t5e-size-1x);
      margin: 0;
      background: var(--t5e-component-card-darker);
      transition: background var(--t5e-transition-default), color var(--t5e-transition-default);
      border-radius: var(--t5e-size-halfx);
      border: 0.0625rem solid var(--t5e-component-card-default);
      box-sizing: border-box;

      --icon-fill: var(--t5e-color-text-lightest);

      label {
        color: var(--t5e-color-text-lighter);
      }

      &.active {
        background: var(--t5e-component-card-lighter);
        --icon-fill: var(--t5e-color-text-default);

        label {
          color: var(--t5e-color-text-default);
        }
      }

      label {
        display: flex;
        align-items: center;
        gap: 0.375rem;
      }

      .flex1 {
        flex: 1;
      }

      &:hover span {
        color: var(--t5e-color-text-default);
      }

      &:hover,
      &:focus-within,
      &:active {
        background: var(--t5e-component-card-default);

        >* {
          cursor: pointer;
        }
      }

      dnd5e-icon {
        --icon-width: 1.125rem;
        --icon-height: 1.125rem;
      }
    }
  }

  // TODO: @kgar still need to move inventory footer to flex positioned outside rest of content. Here was some of the padding changes
  .window-content .main-content>.tidy-tab.inventory {
    //   padding: 0;

    //   >* {
    //     margin-left: var(--t5e-size-4x);
    //     margin-right: var(--t5e-size-4x);
    //   }

    //   >:first-child {
    //     margin-top: var(--t5e-size-3x);
    //   }

    //   >:last-child {
    //     margin: 0 var(--t5e-size-3x) var(--t5e-size-3x);
    //     padding: var(--t5e-size-1x);
    //   }

    row-gap: 0;
    padding-inline-end: 0;

    .inventory-content {
      display: flex;
      flex-direction: column;
      flex: 1 1 0;
      overflow: auto;
      padding-inline-end: var(--t5e-size-4x);
      row-gap: var(--t5e-size-3x);
    }

    .inventory-footer {
      flex: 0 0 auto;
      padding-inline-end: var(--t5e-size-4x);
    }
  }

  .tidy-tab.journal {
    gap: 0.75rem;

    &.active {
      display: flex;
      flex-direction: row;
    }

    .journal-entry-selector {
      flex: 0;
      flex-basis: 12rem;
      display: flex;
      flex-direction: column;
    }

    .tidy-vertical-tab-strip {
      flex: 1;
      overflow-y: auto;
    }

    .action-buttons {
      display: flex;
      gap: 0.5rem;

      .add {
        flex: 1;
      }
    }

    .journal-entry-viewer {
      flex: 1;
      overflow-y: auto;
    }

    .title-container {

      .title {
        flex: 1;
      }
    }
  }




  .actor-warnings-control {
    &::before {
      color: var(--t5e-color-yellow);
    }
  }

  dialog.warnings {
    position: fixed;
    width: 18.75rem;
    max-width: unset;
    max-height: unset;
    margin: 0;
    outline: none;
    padding: 0.25rem 0.5rem;
    color: var(--t5e-primary-font-color);
    background: var(--t5e-component-field-background);
    border: 0.0625rem solid var(--t5e-component-field-border);
    border-radius: 0.25rem;
    box-shadow: var(--t5e-drop-shadow-card);

    &::backdrop {
      background: none;
    }

    ol {
      display: flex;
      flex-direction: column;

      li {
        padding: 0.375rem 0.5rem;
        border-bottom: 0.09375rem dotted var(--t5e-component-card-lighter);

        &:last-child {
          border: none;
        }

        a {
          &:hover {
            text-shadow: none;
            text-decoration: underline dotted;
          }
        }

        &.warning::before,
        &.error::before {
          font-family: var(--font-awesome);
          font-weight: bold;
          color: var(--t5e-color-yellow);
          margin-right: 0.5rem;
        }

        &.warning::before {
          content: '\f071';
        }

        &.error::before {
          content: '\f06a';
          color: var(--t5e-color-text-lighter);
        }
      }
    }
  }

  @import './character-parts/tab-effects.scss';
  @import './character-parts/tab-biography.scss';

  &.theme-dark,
  .theme-dark {
    --t5e-color-gold: var(--t5e-color-palette-gold-45);

    .sheet-body {
      background: url(../../modules/tidy5e-sheet/images/denim065.png) top center / auto repeat,
        var(--t5e-component-card-dark-darker);
      background-size: auto;

      &::before {
        content: none;
      }
    }

    .window-content {
      .sheet-header {
        border-bottom: 0.0625rem solid var(--t5e-color-palette-gold-45);
      }
    }

    .tidy-tab.effects {
      i.enabled {
        color: var(--t5e-theme-color-highlight);
      }

      i:not(.enabled) {
        color: var(--t5e-color-text-lighter);
      }
    }

    .tidy-tab.biography {
      .biography-editor-container {
        .editor {
          background: rgba(0, 0, 0, 0.24);
        }
      }
    }

    .use-ability-list {

      button.proficiency {
        --_fill: var(--t5e-theme-color-lighter);


        &.button-icon-only:hover {
          border: none;
          outline: none;
          background: transparent;
        }

        &:hover,
        &:focus,
        &:active {
          i {
            --_fill: var(--t5e-theme-color-lightest);
            color: var(--_fill);
          }
        }
      }
    }

    .traits.list .pill:is(.physical-bypass) {
      border-color: var(--t5e-color-palette-orange-70);
    }
  }
}