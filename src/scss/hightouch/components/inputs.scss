/* App V2 Reset */

input {
  box-shadow: none;
  outline: none;

  &:hover,
  &:focus {
    box-shadow: none;
    outline: none;
  }
}

/* Hightouch-style inputs */

input[type='text'] {
  align-items: center;
  background: var(--t5e-component-card-onDefault-default);
  border-radius: 0.125rem;
  border: 1px solid var(--t5e-component-field-default-border);
  box-shadow: 0px 0px 4px 0px var(--dnd5e-shadow-15);
  display: flex;
  font-size: var(--font-size-13, 0.8125rem);
  font-weight: 400;
  line-height: normal;
  padding: 0.5rem;

  &:hover {
    background: linear-gradient(
        0deg,
        rgba(255, 255, 255, 0.5) 0%,
        rgba(255, 255, 255, 0.5) 100%
      ),
      var(--t5e-component-card-onDefault-default);
  }

  &:focus {
    border-radius: 0.125rem;
    border: 1px solid var(--t5e-component-field-default-border);
    background: linear-gradient(
        0deg,
        rgba(255, 255, 255, 0.5) 0%,
        rgba(255, 255, 255, 0.5) 100%
      ),
      var(--t5e-component-card-onDefault-default);

    /* focus/field */
    box-shadow: 0px 0px 0px 2px #9a2a30;
  }

  &:disabled {
    background: rgba(159, 146, 117, 0.2);
    color: var(--t5e-color-text-onDefault-lightest);
  }

  &::placeholder {
    color: var(--t5e-color-text-onDefault-disabled);
  }
}

:where(search) {
  align-items: center;
  background: var(--t5e-component-card-onDefault-default);
  border-radius: 0.125rem;
  border: 1px solid var(--t5e-component-field-default-border);
  box-shadow: 0px 0px 4px 0px var(--dnd5e-shadow-15);
  display: flex;
  height: 2rem;
  padding: 0.5rem 0 0.5rem 0.5rem;

  &:focus-within {
    box-shadow: 0px 0px 0px 2px #9a2a30;
  }

  // TODO: Consider how to generalize this particular style, since other inputs use the same technique
  .icon-and-input {
    align-items: center;
    display: flex;
    flex: 1;
    gap: 0.5rem;
  }

  input[type='text'] {
    background: none;
    border-radius: 0;
    border: none;
    box-shadow: none;
    color: var(--t5e-color-text-onDefault-default);
    flex: 1 0 0;
    font-size: var(--font-size-13);
    height: auto;
    padding: 0;

    &:focus {
      box-shadow: none;
      border: none;
    }

    &::placeholder {
      color: var(--t5e-color-text-onDefault-disabled);
    }
  }

  i {
    font-size: 0.6875rem;
  }

  .cancel-search {
    width: 2rem;
    height: 2rem;
    color: var(--t5e-color-text-onDefault-lighter);
    display: inline-flex;
    justify-content: center;
    align-items: center;

    i {
      font-size: 0.6875rem;
      font-style: normal;
      font-weight: 900;
      line-height: normal;
      text-transform: uppercase;
    }
  }
}

input[type='radio'] {
  --input-size: 1rem;

  appearance: none;
  font: inherit;
  color: currentColor;
  width: var(--input-size);
  height: var(--input-size);
  background: var(--t5e-component-field-default-background);
  border: 0.0625rem solid var(--t5e-component-field-default-border);
  border-radius: 50%;
  box-shadow: 0px 0px 4px 0px var(--dnd5e-shadow-15);

  display: inline-flex;
  align-items: center;
  justify-content: center;
  transform: translateY(-0.15rem);

  &:not(.disabled)::before {
    content: '';
    width: 0.65em;
    height: 0.65em;
    border-radius: 50%;
    transform: scale(0);
    transition: 120ms transform ease-in-out;
    background-color: var(--t5e-color-text-onDefault-gold-light);
  }

  &:checked {
    border: 1px solid var(--t5e-component-toggle-toggled-border);
    background: var(--t5e-component-toggle-toggled-background);

    &::before {
      transform: scale(1);
    }
  }

  &:disabled {
    border: 1px solid var(--t5e-component-field-default-border);
    // TODO: CSS Variable
    background: rgba(159, 146, 117, 0.2);
  }
}

input[type='checkbox'] {
  --checkbox-checked-color: var(--t5e-component-toggle-toggled-background);
  --checkbox-checkmark-color: var(--t5e-color-text-onDefault-gold-light);
  --checkbox-size: 1rem;
  width: var(--checkbox-size);
  height: var(--checkbox-size);
  margin: 0;
  --input-focus-outline-color: ;

  text-align: center;

  &::before,
  &::after {
    content: unset;
    font-weight: 900;
  }

  border-radius: 0.125rem;
  border: 0.0625rem solid var(--t5e-component-field-default-border);
  background: var(--t5e-component-field-default-background);
  box-shadow: 0px 0px 4px 0px var(--dnd5e-shadow-15);

  &:checked {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  &:checked::before {
    content: '\f00c';
    font-size: 0.6875rem;
    color: var(--t5e-color-text-onDefault-gold-light);
  }

  &:checked {
    border: 1px solid var(--t5e-component-toggle-toggled-border);
    background: var(--t5e-component-toggle-toggled-background);
  }

  &:disabled {
    border: 0.0625rem solid var(--t5e-component-field-default-border);
    // TODO: CSS Variable
    background: rgba(159, 146, 117, 0.2);

    &::before {
      color: var(--t5e-color-icon-light-diminished);
    }
  }
}

// To customize the chevron, try the bootstrap approach: https://getbootstrap.com/docs/5.3/forms/select/

select {
  border-radius: 0.125rem;
  border: 1px solid var(--t5e-component-field-default-border);
  background: var(--t5e-component-card-onDefault-default);
  box-shadow: 0px 0px 4px 0px var(--dnd5e-shadow-15);
  padding: 0 0.5rem;

  display: flex;
  height: var(--font-font-size-32, 2rem);
  align-items: center;
  gap: 0.375rem;
  flex-shrink: 0;

  &:hover {
    background: linear-gradient(
        0deg,
        rgba(255, 255, 255, 0.5) 0%,
        rgba(255, 255, 255, 0.5) 100%
      ),
      var(--t5e-component-card-onDefault-default);

    /* shadow/field/light */
    box-shadow: 0px 0px 4px 0px var(--dnd5e-shadow-15);
  }

  &:focus {
    background: linear-gradient(
        0deg,
        rgba(255, 255, 255, 0.5) 0%,
        rgba(255, 255, 255, 0.5) 100%
      ),
      var(--t5e-component-card-onDefault-default);

    /* focus/field */
    box-shadow: 0px 0px 0px 2px #9a2a30;
    outline: none;
  }

  &:disabled {
    background: rgba(159, 146, 117, 0.2);
    color: var(--t5e-color-text-onDefault-lightest, #666);
  }
}
